# Additional dockerfile contents that will be appended to ray-ml/Dockerfile

# symlink cuda 11 to 10.0. (for library built with cuda 10, like tensorflow)
RUN sudo ln -s /usr/local/cuda /usr/local/nvidia && \
    sudo ln -s /usr/local/cuda/lib64/libcudart.so.11.0 /usr/local/cuda/lib64/libcudart.so.10.1 && \
    sudo ln -s /usr/local/cuda/lib64/libcublas.so.11 /usr/local/cuda/lib64/libcublas.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libcublasLt.so.11 /usr/local/cuda/lib64/libcublasLt.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libcusparse.so.11 /usr/local/cuda/lib64/libcusparse.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnppc.so.11 /usr/local/cuda/lib64/libnppc.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnppial.so.11 /usr/local/cuda/lib64/libnppial.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnppicc.so.11 /usr/local/cuda/lib64/libnppicc.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnppidei.so.11 /usr/local/cuda/lib64/libnppidei.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnppif.so.11 /usr/local/cuda/lib64/libnppif.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnppig.so.11 /usr/local/cuda/lib64/libnppig.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnppim.so.11 /usr/local/cuda/lib64/libnppim.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnppist.so.11 /usr/local/cuda/lib64/libnppist.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnppisu.so.11 /usr/local/cuda/lib64/libnppisu.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnppitc.so.11 /usr/local/cuda/lib64/libnppitc.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnpps.so.11 /usr/local/cuda/lib64/libnpps.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnvblas.so.11 /usr/local/cuda/lib64/libnvblas.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnvjpeg.so.11 /usr/local/cuda/lib64/libnvjpeg.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnvrtc-builtins.so.11 /usr/local/cuda/lib64/libnvrtc-builtins.so.10 && \
    sudo ln -s /usr/local/cuda/lib64/libnvrtc.so.11 /usr/local/cuda/lib64/libnvrtc.so.10 && \
    sudo ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.8 /usr/local/cuda/lib64/libcudnn.so.7 && \
    sudo ln -s /usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8 /usr/local/cuda/lib64/libcudnn_adv_infer.so.7 && \
    sudo ln -s /usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8 /usr/local/cuda/lib64/libcudnn_adv_train.so.7 && \
    sudo ln -s /usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8 /usr/local/cuda/lib64/libcudnn_cnn_infer.so.7 && \
    sudo ln -s /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8 /usr/local/cuda/lib64/libcudnn_cnn_train.so.7 && \
    sudo ln -s /usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8 /usr/local/cuda/lib64/libcudnn_ops_infer.so.7 && \
    sudo ln -s /usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8 /usr/local/cuda/lib64/libcudnn_ops_train.so.7

# install tensorflow from conda instead of pip for cuda driver support
RUN conda install -y tensorflow-gpu
